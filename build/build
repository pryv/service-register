#!/usr/bin/env bash

set -e

# Builds 'service-register' docker image with the version given below. 
scripts/build_name

version=$(cat build_tag)
if [ -e release_build ]; then
  echo "This is a release build, it will update 'latest' tags."
fi

function release {
  local host='eu.gcr.io'
  local service_name=$1
  local version=$2

  local local_name="$service_name:$version"
  local remote_name="$host/$service_name:$version"

  # Publication to registry:
  docker tag $local_name $remote_name
  docker push $remote_name
}

pushd ..

# Create a release.tar that contains all the code. 
tar cf build/release.tar \
  --exclude README.md \
  --exclude scripts \
  --exclude .github \
  --exclude dev-config.json \
  --exclude test \
  --exclude .git \
  .
popd

# Build the docker image (commented out)
echo "---------------------------- building register ------------------------------"
pushd register
cp ../release.tar .
docker build -f Dockerfile -t pryvio/register:$version .
release "pryvio/register" $version
popd

echo "---------------------------- building dns -----------------------------------"
pushd dns
cp ../release.tar .
docker build -f Dockerfile -t pryvio/dns:$version .
release "pryvio/dns" $version
popd

