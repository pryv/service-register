const {_onDnsRequest } = require('../../../source/dns/ndns-wrapper.js');

/* global describe, it */

describe.skip('_onDnsRequest', () => {
  it('should not answer to DNS responses', (done) => {
    // Mock out dns environment, simulating the case where the query is in
    // fact a replayed DNS response.
        
    let req = {
      q: [{
        name:'google.ch',
        type:1,
        class:1,
        typeName:'A',
        className:'IN'
      }],
      header: {}
    };
    
    const res = {};
    res.setHeader = () => undefined; 
    res.send = () => undefined; 
    
    // This first request is the replay of a DNS response.
    // It should not be answered by our DNS.
    
    req.header.qr = 1; // This is a DNS response
    
    _onDnsRequest(() => {
      throw new Error('DNS just answered to a DNS response, which makes it vulnerable to DOS attack!');
    }, req, res);
    
    // TODO: Maybe wait a bit between the 2 queries
    
    // Here we make a legit query and assume that if the DNS answers to this one
    // before the previous one, then everything should be fine.
    
    req.header.qr = 0; // This is a DNS query
    
    _onDnsRequest(() => {
      return done();
    }, req, res);
    
  });
});