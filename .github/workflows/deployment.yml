name: Pryv-registration-server deployment workflow

on: 
  push:
    tags:
      - '*'
jobs:
  build:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [12.13]

    steps:
    - name: Download master branch
      uses: actions/checkout@v2
    
    - name: Setup Node.js with version ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
      
    - name: yarn install
      run: yarn install
      
    - name: yarn setup
      run: yarn setup

    - name: yarn database
      run: yarn database
    
    - name: yarn test - This should never fail and could be skipped
      run: yarn test
      
    - name: yarn release
      run: yarn release
      
    - name: Prepare for the build
      run: |
        tar cf build/release.tar \
                --exclude .git \
                --exclude node_modules \
                --exclude nbproject \
                --exclude .github \
                --exclude test \
                --exclude mindMap.mmd \
                --exclude build .

    - name: Login to the docker containers registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_PRYV_SERVER }}
        username: ${{ secrets.REGISTRY_PRYV_USERNAME }}
        password: ${{ secrets.REGISTRY_PRYV_PASSWORD }}
        
    - name: Build and deploy registry container
      run: |
        docker pull ${{ secrets.REGISTRY_PRYV_SERVER }}/pryv/base:1.3.40
        docker tag "${{ secrets.REGISTRY_PRYV_SERVER }}/pryv/base:1.3.40" "pryv/base:1.3.40"
        cd build/register
        cp ../release.tar .
        docker build -f Dockerfile -t pryv/register:${{ env.RELEASE_VERSION }} .
        docker tag "pryv/${{ env.RELEASE_VERSION }}" "${{ secrets.REGISTRY_PRYV_SERVER }}/pryv/register:${{ env.RELEASE_VERSION }}"
        #docker push "${{ secrets.REGISTRY_PRYV_SERVER }}/pryv/register:${{ env.RELEASE_VERSION }}"
    
    - name: Build and deploy DNS container 
      run: |
        ls
        cd build/dns
        cp ../release.tar .
        sudo docker build -f Dockerfile -t pryv/dns:${{ env.RELEASE_VERSION }} .
        docker tag "pryv/dns:${{ env.RELEASE_VERSION }}" "${{ secrets.REGISTRY_PRYV_SERVER }}/pryv/dns:${{ env.RELEASE_VERSION }}"
        docker images
        #docker push "${{ secrets.REGISTRY_PRYV_SERVER }}/pryv/dns:${{ env.RELEASE_VERSION }}"